!function (t, e) { "object" == typeof exports && "undefined" != typeof module ? e(require("jquery")) : "function" == typeof define && define.amd ? define(["jquery"], e) : e(t.$) }(this, function (t) { "use strict"; t = "default" in t ? t.default : t; var e = { startAt: 0, showBackButton: !0, showFooterButtons: !0, onInit: $.noop, onDestroy: $.noop, onFinish: $.noop, onChange: function () { return !0 } }, n = function (t, e) { if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function") }, i = function () { function t(t, e) { for (var n = 0; n < e.length; n++) { var i = e[n]; i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(t, i.key, i) } } return function (e, n, i) { return n && t(e.prototype, n), i && t(e, i), e } }(), o = function () { function o(i, s) { n(this, o), this.options = t.extend({}, e, s), this.el = t(i), this.init() } return i(o, [{ key: "init", value: function () { this.hook("onInit"); var e = this; t(this.el).on("click", ".step-steps > li > a", function (n) { n.preventDefault(); var i = t(this).closest("li").index(), o = e.getStepIndex(); e.setActiveStep(o, i) }), t(this.el).on("click", ".step-footer > button", function (n) { n.preventDefault(); var i = t(this).data("direction"); e.setAction(i) }), this.setShowStep(this.options.startAt, "", "active"), this.setFooterBtns(), this.options.showFooterButtons || (this.hideFooterBtns(), this.setFooterBtns = t.noop) } }, { key: "hook", value: function (t) { void 0 !== this.options[t] && this.options[t].call(this.el) } }, { key: "destroy", value: function () { this.el.empty(), this.el.removeData("plugin_Steps"), this.hook("onDestroy") } }, { key: "getStepIndex", value: function () { return this.el.find(".step-steps > li.active").index() || 0 } }, { key: "getMaxStepCount", value: function () { return this.el.find(".step-steps > li").length - 1 } }, { key: "getStepDirection", value: function (t, e) { var n = "none"; return e < t ? n = "backward" : e > t && (n = "forward"), n } }, { key: "setShowStep", value: function (e, n) { var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : ""; this.el.find(".step-content > .step-tab-panel").removeClass("active"); var o = this.el.find(".step-steps > li").eq(e); o.removeClass(n).addClass(i); var s = o.find("a").attr("href"); t(s).addClass("active") } }, { key: "setActiveStep", value: function (t, e) { if (e !== t) { if (e > t) for (var n = 0; n <= e; n += 1) { n === e ? this.setShowStep(n, "done", "active") : this.setShowStep(n, "active error", "done"); var i = this.getStepDirection(n, e); if (!this.options.onChange(n, e, i)) { this.setShowStep(n, "done", "error active"), this.setFooterBtns(); break } } if (t > e) for (var o = t; o >= e; o -= 1) { var s = this.getStepDirection(o, e); this.options.onChange(o, e, s), this.setShowStep(o, "done active error"), o === e && this.setShowStep(o, "done error", "active") } this.setFooterBtns() } } }, { key: "setFooterBtns", value: function () { var t = this.getStepIndex(), e = this.getMaxStepCount(), n = this.el.find(".step-footer"); 0 === t && n.find('button[data-direction="prev"]').hide(), t > 0 && this.options.showBackButton && n.find('button[data-direction="prev"]').show(), e === t ? (n.find('button[data-direction="prev"]').show(), n.find('button[data-direction="next"]').hide(), n.find('button[data-direction="finish"]').show()) : (n.find('button[data-direction="next"]').show(), n.find('button[data-direction="finish"]').hide()), this.options.showBackButton || n.find('button[data-direction="prev"]').hide() } }, { key: "setAction", value: function (t) { var e = this.getStepIndex(), n = e; ("prev" === t && (n -= 1), "next" === t && (n += 1), "finish" === t) && (this.options.onChange(e, n, "forward") ? this.hook("onFinish") : this.setShowStep(e, "", "error")); "finish" !== t && this.setActiveStep(e, n) } }, { key: "hideFooterBtns", value: function () { this.el.find(".step-footer").hide() } }], [{ key: "setDefaults", value: function (n) { t.extend(e, t.isPlainObject(n) && n) } }]), o }(), s = t.fn.steps; t.fn.steps = function (e) { return this.each(function () { t.data(this, "plugin_Steps") || t.data(this, "plugin_Steps", new o(this, e)) }) }, t.fn.steps.version = "1.0.0", t.fn.steps.setDefaults = o.setDefaults, t.fn.steps.noConflict = function () { return t.fn.steps = s, this } });